/**
 * This file was generated by the Jeddict
 */
package ch.zhaw.mobileeng.abetterliving.model;

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import lombok.Data;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;

/**
 * @author Raphael Fuchs
 */
@Data
@Entity
@Table(name = "USERS")
public class Users {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long userID;

    @Column(unique = true)
    private String username;

    @Basic
    private String email;

    @Basic
    private String password;

    @ManyToMany(mappedBy = "userses")
    private List<Tasks> taskses;

    public void setAndHashPassword(String plainTextPW) {
        password = (new BCryptPasswordEncoder()).encode(plainTextPW);
    }

    /*public Long getUserID() {
        return this.UserID;
    }

    public void setUserID(Long UserID) {
        this.UserID = UserID;
    }

    public String getUsername() {
        return this.Username;
    }

    public void setUsername(String Username) {
        this.Username = Username;
    }

    public String getEmail() {
        return this.Email;
    }

    public void setEmail(String Email) {
        this.Email = Email;
    }

    public String getPassword() {
        return this.Password;
    }

    public void setPassword(String Password) {
        this.Password = Password;
    }

    public List<Tasks> getTaskses() {
        if (taskses == null) {
            taskses = new ArrayList<>();
        }
        return this.taskses;
    }

    public void setTaskses(List<Tasks> taskses) {
        this.taskses = taskses;
    }

    public void addTaskse(Tasks taskse) {
        getTaskses().add(taskse);
    }

    public void removeTaskse(Tasks taskse) {
        getTaskses().remove(taskse);
    }*/
}
